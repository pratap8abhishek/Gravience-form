{"ast":null,"code":"var _jsxFileName = \"D:\\\\griveance\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Form from './components/Form';\nimport Display from './components/Display';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let {\n        email,\n        title,\n        desc\n      } = event.target.elements;\n      let arr = [email.value, title.value, desc.value];\n      this.setState({\n        greviance: [...this.state.greviance, arr]\n      }, () => {\n        event.target.reset();\n      });\n    };\n\n    this.updateAction = (status, index) => {\n      let updatedgre = this.state.greviance.map((contact, ind) => {\n        if (ind === index) {\n          contact.push(status);\n          return contact;\n        }\n\n        return contact;\n      });\n      this.setState({\n        greviance: updatedgre\n      });\n    };\n\n    this.state = {\n      greviance: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container bg-light\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        handleSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Display, {\n        greviance: this.state.greviance,\n        updateAction: this.updateAction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/griveance/src/App.js"],"names":["React","Component","Form","Display","App","constructor","handleSubmit","event","preventDefault","email","title","desc","target","elements","arr","value","setState","greviance","state","reset","updateAction","status","index","updatedgre","map","contact","ind","push","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,WAAP;;;AACA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,GAAE;AACX;;AADW,SAMbC,YANa,GAMGC,KAAD,IAAU;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAI;AAACC,QAAAA,KAAD;AAAQC,QAAAA,KAAR;AAAeC,QAAAA;AAAf,UAAuBJ,KAAK,CAACK,MAAN,CAAaC,QAAxC;AACA,UAAIC,GAAG,GAAG,CAACL,KAAK,CAACM,KAAP,EAAcL,KAAK,CAACK,KAApB,EAA2BJ,IAAI,CAACI,KAAhC,CAAV;AACA,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAG,CAAC,GAAG,KAAKC,KAAL,CAAWD,SAAf,EAA0BH,GAA1B;AADA,OAAd,EAEE,MAAI;AACJP,QAAAA,KAAK,CAACK,MAAN,CAAaO,KAAb;AACD,OAJD;AAKD,KAfY;;AAAA,SAgBbC,YAhBa,GAgBE,CAACC,MAAD,EAAQC,KAAR,KAAgB;AAC7B,UAAIC,UAAU,GAAG,KAAKL,KAAL,CAAWD,SAAX,CAAqBO,GAArB,CAAyB,CAACC,OAAD,EAASC,GAAT,KAAe;AACvD,YAAGA,GAAG,KAAKJ,KAAX,EAAkB;AAChBG,UAAAA,OAAO,CAACE,IAAR,CAAaN,MAAb;AACA,iBAAOI,OAAP;AACD;;AACC,eAAOA,OAAP;AACH,OANgB,CAAjB;AAOA,WAAKT,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAEM;AADC,OAAd;AAGD,KA3BY;;AAEX,SAAKL,KAAL,GAAa;AACXD,MAAAA,SAAS,EAAG;AADD,KAAb;AAGD;;AAuBDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,YAAY,EAAI,KAAKtB;AAA3B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAS,QAAA,SAAS,EAAI,KAAKY,KAAL,CAAWD,SAAjC;AAA4C,QAAA,YAAY,EAAI,KAAKG;AAAjE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AApCyB;;AAsC5B,eAAehB,GAAf","sourcesContent":["import React, {Component} from 'react'\nimport Form from './components/Form'\nimport Display from './components/Display'\nimport './App.css'\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      greviance : []\n    }\n  }\n  handleSubmit = (event)=> {\n    event.preventDefault()\n    let {email, title, desc} = event.target.elements\n    let arr = [email.value, title.value, desc.value]\n    this.setState({\n      greviance : [...this.state.greviance, arr]\n    },()=>{\n      event.target.reset()\n    })\n  }\n  updateAction = (status,index)=>{\n    let updatedgre = this.state.greviance.map((contact,ind)=>{\n      if(ind === index) {\n        contact.push(status)\n        return contact\n      } \n        return contact\n    })\n    this.setState({\n      greviance: updatedgre\n    })\n  }\n  render() {\n    return (\n      <div className=\"container bg-light\">\n        <Form handleSubmit = {this.handleSubmit} />\n        <Display greviance = {this.state.greviance} updateAction = {this.updateAction}/>\n      </div>\n    )\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}